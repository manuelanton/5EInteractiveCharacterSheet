{"version":3,"sources":["components/styles/MainGrid.ts","components/styles/StatCard.ts","utils.ts","components/SingleStat.tsx","reducers/index.ts","actions/stats.ts","constants.ts","components/Stats.tsx","actions/persist.ts","actions/details.ts","components/CharacterDetail.tsx","components/NewAttack.tsx","actions/attacks.ts","components/RollOne.tsx","components/Attacks.tsx","App.tsx","store.ts","serviceWorker.ts","index.tsx"],"names":["MainGrid","styled","div","StatCard","H5","h5","diceRoller","sides","amount","bonus","roll","total","rolls","critical","newRoll","Math","ceil","random","push","console","log","enumIntoArray","enumObject","all","key","slice","length","calculateMod","statValue","floor","classes","damageTypes","SingleStat","props","prof","useSelector","state","saves","stats","stat","profBonus","dispatch","useDispatch","saveBonus","includes","type","checked","onChange","payload","onClick","alert","name","toUpperCase","style","width","textAlign","boxSizing","value","e","currentTarget","valueAsNumber","Stats","store","useEffect","localStorage","JSON","parse","stringStore","stringify","setItem","initialState","STR","DEX","CON","INT","WIS","CHA","race","class","background","level","AC","HP","max","current","attacks","damage","diceSides","diceAmount","damageType","Piercing","damageMod","rootReducer","action","filter","save","attack","CharacterDetail","hp","characterClass","classesArray","DC","calculateSpellDC","spellBonus","margin","display","flexDirection","alignContent","height","changeName","changeBackground","changeRace","changeClass","target","disabled","map","classOption","changeLevel","NewAttack","damageTypesArray","useState","newAttackName","setNewAttackName","setSides","setAmount","setDamageType","newStat","setNewStat","setDamageMod","defaultValue","parseInt","option","die","damageOption","damageDie","dieAmount","addAttack","RollOne","setBonus","result","setResult","advantage","setAdvantage","disadvantage","setDisadvantage","firstRoll","secondRoll","advantageHandler","Attacks","characterRace","crit","extraDie","critCalculator","marginLeft","maxHeight","overflowY","padding","join","App","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","gridArea","flexFlow","justifyContent","alignItems","marginTop","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cec50acd.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const MainGrid = styled.div`\r\n  display: grid;\r\n  margin: 0px;\r\n  height: 100vh;\r\n  max-height: 100vh;\r\n  width: 100vw;\r\n  grid-template-rows: 25% minmax(0, 1fr);\r\n  grid-template-columns: 20% minmax(0, 1fr);\r\n  grid-template-areas:\r\n    \"stats details\"\r\n    \"stats attacks\";\r\n  box-sizing: border-box;\r\n  background-color: #d6cca9;\r\n\r\n  @media (max-width: 640px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 auto;\r\n    align-items: space-between;\r\n    background-color: white;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StatCard = styled.div`\r\n  height: 10%;\r\n  width: 85%;\r\n  border-radius: 25px;\r\n  background-color: white;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  padding: 2%;\r\n  margin: 0.1em;\r\n  border: 2px solid black;\r\n`;\r\n\r\nexport const H5 = styled.h5`\r\n  margin: 0 auto;\r\n`;\r\n","export function diceRoller(sides = 20, amount = 1, bonus = 0) {\r\n  interface Roll {\r\n    total: number;\r\n    rolls: number[];\r\n    critical?: boolean;\r\n  }\r\n\r\n  let roll: Roll = {\r\n    total: bonus,\r\n    rolls: [],\r\n    critical: false\r\n  };\r\n\r\n  while (amount) {\r\n    let newRoll: number = Math.ceil(Math.random() * sides);\r\n    roll.rolls.push(newRoll);\r\n    roll.total += newRoll;\r\n    roll.critical = sides === 20 && newRoll === 20;\r\n    amount--;\r\n  }\r\n  console.log(roll);\r\n  return roll;\r\n}\r\n\r\nexport function enumIntoArray(enumObject: any) {\r\n  var all = [];\r\n  for (var key in enumObject) {\r\n    all.push(enumObject[key]);\r\n  }\r\n  return all.slice(0, all.length / 2);\r\n}\r\n\r\nexport function calculateMod(statValue: number) {\r\n  return Math.floor((statValue - 10) / 2);\r\n}\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { StatCard, H5 } from \"../components/styles/StatCard\";\r\nimport { createStatChange, addSave, removeSave } from \"../actions/stats\";\r\nimport { diceRoller, calculateMod } from \"../utils\";\r\n\r\nconst SingleStat = (props: { name: string; stat: string }) => {\r\n  const prof: any = useSelector<any>(state => state.saves);\r\n  const statValue: any = useSelector<any>(state => state.stats[props.stat]);\r\n  const profBonus: any = useSelector<any>(state => state.profBonus);\r\n  const dispatch = useDispatch();\r\n\r\n  const addOrRemoveSave = () => {\r\n    return prof.includes(props.stat)\r\n      ? removeSave(props.stat)\r\n      : addSave(props.stat);\r\n  };\r\n\r\n  const saveBonus: number = prof.includes(props.stat)\r\n    ? calculateMod(statValue) + profBonus\r\n    : calculateMod(statValue);\r\n\r\n  return (\r\n    <StatCard>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={prof.includes(props.stat)}\r\n        onChange={() => dispatch(addOrRemoveSave())}\r\n      />\r\n      <H5 onClick={() => alert(`Total: ${diceRoller(20, 1, saveBonus).total}`)}>\r\n        {props.name.toUpperCase()}\r\n      </H5>\r\n      <span>\r\n        {props.stat}: {calculateMod(statValue)}\r\n      </span>\r\n\r\n      <input\r\n        type=\"number\"\r\n        style={{\r\n          width: \"75%\",\r\n          textAlign: \"center\",\r\n          boxSizing: \"border-box\"\r\n        }}\r\n        value={statValue}\r\n        onChange={e =>\r\n          dispatch(createStatChange(props.stat, e.currentTarget.valueAsNumber))\r\n        }\r\n      />\r\n    </StatCard>\r\n  );\r\n};\r\n\r\nexport default SingleStat;\r\n","import {\r\n  CHANGE_MOD,\r\n  CHANGE_NAME,\r\n  CHANGE_LEVEL,\r\n  CHANGE_CLASS,\r\n  ADD_ATTACK,\r\n  ADD_SAVE,\r\n  REMOVE_ATTACK,\r\n  REMOVE_SAVE,\r\n  CHANGE_BACKGROUND,\r\n  CHANGE_AC,\r\n  CHANGE_RACE,\r\n  PERSIST_STORE,\r\n  CHANGE_HP_MAX,\r\n  CHANGE_HP_CURRENT\r\n} from \"../constants\";\r\n\r\nexport enum classes {\r\n  Artificer,\r\n  Barbarian,\r\n  Bard,\r\n  Cleric,\r\n  Druid,\r\n  Fighter,\r\n  Monk,\r\n  Paladin,\r\n  Ranger,\r\n  Rogue,\r\n  Sorcerer,\r\n  Warlock,\r\n  Wizard\r\n}\r\n\r\nexport enum damageTypes {\r\n  Acid,\r\n  Bludgeoning,\r\n  Cold,\r\n  Fire,\r\n  Force,\r\n  Lightning,\r\n  Necrotic,\r\n  Piercing,\r\n  Poison,\r\n  Psychic,\r\n  Radiant,\r\n  Slashing,\r\n  Thunder\r\n}\r\n\r\nexport interface RootState {\r\n  stats: {\r\n    STR: number;\r\n    DEX: number;\r\n    CON: number;\r\n    INT: number;\r\n    WIS: number;\r\n    CHA: number;\r\n  };\r\n  name: string;\r\n  race: string;\r\n  class: classes | \"\";\r\n  background: string;\r\n  level: number;\r\n  profBonus: number;\r\n  AC: number;\r\n  HP: {\r\n    max: number;\r\n    current: number;\r\n  };\r\n  saves: string[];\r\n  attacks: [\r\n    {\r\n      name: string;\r\n      stat: string;\r\n      damage: {\r\n        diceSides: number;\r\n        diceAmount: number;\r\n        damageType: damageTypes;\r\n        damageMod: boolean;\r\n      };\r\n    }\r\n  ];\r\n}\r\n\r\nexport const initialState: RootState = {\r\n  stats: {\r\n    STR: 10,\r\n    DEX: 10,\r\n    CON: 10,\r\n    INT: 10,\r\n    WIS: 10,\r\n    CHA: 10\r\n  },\r\n  name: \"\",\r\n  race: \"\",\r\n  class: \"\",\r\n  background: \"\",\r\n  level: 1,\r\n  profBonus: 2,\r\n  AC: 10,\r\n  HP: {\r\n    max: 1,\r\n    current: 1\r\n  },\r\n  saves: [],\r\n  attacks: [\r\n    {\r\n      name: \"Dagger\",\r\n      stat: \"DEX\",\r\n      damage: {\r\n        diceSides: 4,\r\n        diceAmount: 1,\r\n        damageType: damageTypes.Piercing,\r\n        damageMod: true\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\nexport function rootReducer(\r\n  state = initialState,\r\n  action: { type: string; payload: any }\r\n) {\r\n  switch (action.type) {\r\n    case CHANGE_MOD: {\r\n      switch (action.payload.stat) {\r\n        case \"STR\": {\r\n          return {\r\n            ...state,\r\n            stats: { ...state.stats, STR: action.payload.value }\r\n          };\r\n        }\r\n        case \"DEX\": {\r\n          return {\r\n            ...state,\r\n            stats: { ...state.stats, DEX: action.payload.value }\r\n          };\r\n        }\r\n        case \"CON\": {\r\n          return {\r\n            ...state,\r\n            stats: { ...state.stats, CON: action.payload.value }\r\n          };\r\n        }\r\n        case \"INT\": {\r\n          return {\r\n            ...state,\r\n            stats: { ...state.stats, INT: action.payload.value }\r\n          };\r\n        }\r\n        case \"WIS\": {\r\n          return {\r\n            ...state,\r\n            stats: { ...state.stats, WIS: action.payload.value }\r\n          };\r\n        }\r\n        case \"CHA\": {\r\n          return {\r\n            ...state,\r\n            stats: { ...state.stats, CHA: action.payload.value }\r\n          };\r\n        }\r\n      }\r\n    }\r\n    case CHANGE_NAME: {\r\n      return { ...state, name: action.payload };\r\n    }\r\n    case CHANGE_RACE: {\r\n      return { ...state, race: action.payload };\r\n    }\r\n    case CHANGE_LEVEL: {\r\n      return {\r\n        ...state,\r\n        level: action.payload,\r\n        profBonus: 1 + Math.ceil(action.payload / 4)\r\n      };\r\n    }\r\n    case CHANGE_CLASS: {\r\n      return { ...state, class: action.payload };\r\n    }\r\n    case CHANGE_AC: {\r\n      return { ...state, AC: action.payload };\r\n    }\r\n    case ADD_SAVE: {\r\n      return { ...state, saves: [...state.saves, action.payload] };\r\n    }\r\n    case REMOVE_SAVE: {\r\n      return {\r\n        ...state,\r\n        saves: state.saves.filter(save => save !== action.payload)\r\n      };\r\n    }\r\n    case CHANGE_BACKGROUND: {\r\n      return { ...state, background: action.payload };\r\n    }\r\n    case CHANGE_HP_MAX: {\r\n      return { ...state, HP: { ...state.HP, max: action.payload } };\r\n    }\r\n    case CHANGE_HP_CURRENT: {\r\n      return { ...state, HP: { ...state.HP, current: action.payload } };\r\n    }\r\n    case ADD_ATTACK: {\r\n      return { ...state, attacks: [...state.attacks, action.payload] };\r\n    }\r\n    case REMOVE_ATTACK: {\r\n      return {\r\n        ...state,\r\n        attacks: state.attacks.filter(attack => attack.name !== action.payload)\r\n      };\r\n    }\r\n    case PERSIST_STORE: {\r\n      return { ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { CHANGE_MOD, ADD_SAVE, REMOVE_SAVE } from \"../constants\";\r\n\r\nexport const createStatChange = (stat: string, value: number) => ({\r\n  type: CHANGE_MOD,\r\n  payload: {\r\n    stat,\r\n    value\r\n  }\r\n});\r\n\r\nexport const addSave = (stat: string) => ({\r\n  type: ADD_SAVE,\r\n  payload: stat\r\n});\r\n\r\nexport const removeSave = (stat: string) => ({\r\n  type: REMOVE_SAVE,\r\n  payload: stat\r\n});\r\n","export const CHANGE_MOD = \"CHANGE_MOD\";\r\nexport const CHANGE_NAME = \"CHANGE_NAME\";\r\nexport const CHANGE_LEVEL = \"CHANGE_LEVEL\";\r\nexport const CHANGE_CLASS = \"CHANGE_CLASS\";\r\nexport const ADD_SAVE = \"ADD_SAVE\";\r\nexport const REMOVE_SAVE = \"REMOVE_SAVE\";\r\nexport const CHANGE_BACKGROUND = \"CHANGE_BACKGROUND\";\r\nexport const CHANGE_AC = \"CHANGE_AC\";\r\nexport const CHANGE_RACE = \"CHANGE_RACE\";\r\nexport const ADD_ATTACK = \"ADD_ATTACK\";\r\nexport const REMOVE_ATTACK = \"REMOVE_ATTACK\";\r\nexport const PERSIST_STORE = \"PERSIST_STORE\";\r\nexport const CHANGE_HP_MAX = \"CHANGE_HP_MAX\";\r\nexport const CHANGE_HP_CURRENT = \"CHANGE_HP_CURRENT\";\r\n","import React, { useEffect } from \"react\";\r\nimport SingleStat from \"../components/SingleStat\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { persistStore } from \"../actions/persist\";\r\n\r\nconst Stats = () => {\r\n  const dispatch = useDispatch();\r\n  const store: any = useSelector<any>(state => state);\r\n\r\n  useEffect(() => {\r\n    localStorage.store &&\r\n      dispatch(persistStore(JSON.parse(localStorage.store)));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (store) {\r\n      try {\r\n        const stringStore = JSON.stringify(store);\r\n        localStorage.setItem(\"store\", stringStore);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [store]);\r\n\r\n  return (\r\n    <>\r\n      <SingleStat name=\"Strength\" stat=\"STR\"></SingleStat>\r\n      <SingleStat name=\"Dexterity\" stat=\"DEX\"></SingleStat>\r\n      <SingleStat name=\"Constitution\" stat=\"CON\"></SingleStat>\r\n      <SingleStat name=\"Intelligence\" stat=\"INT\"></SingleStat>\r\n      <SingleStat name=\"Wisdom\" stat=\"WIS\"></SingleStat>\r\n      <SingleStat name=\"Charisma\" stat=\"CHA\"></SingleStat>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import { PERSIST_STORE } from \"../constants\";\r\n\r\nexport const persistStore = (state: any) => ({\r\n  type: PERSIST_STORE,\r\n  payload: state\r\n});\r\n","import {\r\n  CHANGE_NAME,\r\n  CHANGE_BACKGROUND,\r\n  CHANGE_CLASS,\r\n  CHANGE_LEVEL,\r\n  CHANGE_AC,\r\n  CHANGE_HP_MAX,\r\n  CHANGE_HP_CURRENT,\r\n  CHANGE_RACE\r\n} from \"../constants\";\r\n\r\nexport const changeName = (name: string) => ({\r\n  type: CHANGE_NAME,\r\n  payload: name\r\n});\r\nexport const changeRace = (race: string) => ({\r\n  type: CHANGE_RACE,\r\n  payload: race\r\n});\r\nexport const changeBackground = (background: string) => ({\r\n  type: CHANGE_BACKGROUND,\r\n  payload: background\r\n});\r\nexport const changeClass = (characterClass: string) => ({\r\n  type: CHANGE_CLASS,\r\n  payload: characterClass\r\n});\r\nexport const changeLevel = (level: number) => ({\r\n  type: CHANGE_LEVEL,\r\n  payload: level\r\n});\r\nexport const changeAC = (ac: number) => ({\r\n  type: CHANGE_AC,\r\n  payload: ac\r\n});\r\nexport const changeHPMax = (newMax: number) => ({\r\n  type: CHANGE_HP_MAX,\r\n  payload: newMax\r\n});\r\nexport const changeHPCurrent = (newCurrent: number) => ({\r\n  type: CHANGE_HP_CURRENT,\r\n  payload: newCurrent\r\n});\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  changeName,\r\n  changeBackground,\r\n  changeClass,\r\n  changeLevel,\r\n  changeAC,\r\n  changeRace,\r\n  changeHPMax,\r\n  changeHPCurrent\r\n} from \"../actions/details\";\r\nimport { classes } from \"../reducers/index\";\r\nimport { enumIntoArray, calculateMod } from \"../utils\";\r\n\r\nconst CharacterDetail = () => {\r\n  const stats: any = useSelector<any>(state => state.stats);\r\n  const hp: any = useSelector<any>(state => state.HP);\r\n  const name: any = useSelector<any>(state => state.name);\r\n  const background: any = useSelector<any>(state => state.background);\r\n  const race: any = useSelector<any>(state => state.race);\r\n  const characterClass: any = useSelector<any>(state => state.class);\r\n  let classesArray: string[] = enumIntoArray(classes);\r\n  const level: any = useSelector<any>(state => state.level);\r\n  const profBonus: any = useSelector<any>(state => state.profBonus);\r\n  const AC: any = useSelector<any>(state => state.AC);\r\n  const dispatch = useDispatch();\r\n\r\n  const calculateSpellDC = () => {\r\n    switch (characterClass) {\r\n      case \"Artificer\":\r\n      case \"Wizard\": {\r\n        return 8 + calculateMod(stats.INT) + profBonus;\r\n      }\r\n      case \"Bard\":\r\n      case \"Paladin\":\r\n      case \"Sorcerer\":\r\n      case \"Warlock\": {\r\n        return 8 + calculateMod(stats.CHA) + profBonus;\r\n      }\r\n      case \"Cleric\":\r\n      case \"Druid\":\r\n      case \"Ranger\": {\r\n        return 8 + calculateMod(stats.WIS) + profBonus;\r\n      }\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const DC = calculateSpellDC();\r\n  const spellBonus = DC - 8;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"1em\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignContent: \"space-between\",\r\n        height: \"150px\"\r\n      }}\r\n    >\r\n      <h2>Character Details </h2>\r\n      <div>\r\n        Name: &nbsp;\r\n        <input\r\n          type=\"text\"\r\n          style={{ textAlign: \"center\", width: \"10em\" }}\r\n          value={name}\r\n          onChange={e => dispatch(changeName(e.currentTarget.value))}\r\n        />\r\n        &nbsp; Background: &nbsp;\r\n        <input\r\n          type=\"text\"\r\n          style={{ textAlign: \"center\", width: \"10em\" }}\r\n          value={background}\r\n          onChange={e => dispatch(changeBackground(e.currentTarget.value))}\r\n        />\r\n        &nbsp; Race: &nbsp;\r\n        <input\r\n          type=\"text\"\r\n          style={{ textAlign: \"center\", width: \"10em\" }}\r\n          value={race}\r\n          onChange={e => dispatch(changeRace(e.currentTarget.value))}\r\n        />\r\n        &nbsp; Class: &nbsp;\r\n        <select\r\n          value={characterClass}\r\n          onChange={e => dispatch(changeClass(e.target.value))}\r\n        >\r\n          <option value={\"\"} disabled>\r\n            choose one\r\n          </option>\r\n          {classesArray.map(classOption => (\r\n            <option value={classOption} key={classOption}>\r\n              {classOption}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        &nbsp;Level: &nbsp;\r\n        <input\r\n          type=\"number\"\r\n          style={{ width: \"7em\", textAlign: \"center\" }}\r\n          value={level}\r\n          onChange={e => {\r\n            dispatch(changeLevel(e.currentTarget.valueAsNumber));\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        Prof. Bonus: {profBonus}\r\n        &nbsp; HP(max): &nbsp;\r\n        <input\r\n          type=\"number\"\r\n          style={{ width: \"7em\", textAlign: \"center\" }}\r\n          value={hp.max}\r\n          onChange={e => dispatch(changeHPMax(e.currentTarget.valueAsNumber))}\r\n        />\r\n        &nbsp; HP(current): &nbsp;\r\n        <input\r\n          type=\"number\"\r\n          style={{ width: \"7em\", textAlign: \"center\" }}\r\n          value={hp.current}\r\n          onChange={e =>\r\n            dispatch(changeHPCurrent(e.currentTarget.valueAsNumber))\r\n          }\r\n        />\r\n        &nbsp; AC: &nbsp;\r\n        <input\r\n          type=\"number\"\r\n          style={{ width: \"7em\", textAlign: \"center\" }}\r\n          value={AC}\r\n          onChange={e => dispatch(changeAC(e.currentTarget.valueAsNumber))}\r\n        />{\" \"}\r\n        &nbsp;\r\n        {DC !== null &&\r\n          `Spell Save DC: ${DC} Spell Attack Bonus: ${spellBonus}`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import React, { useState } from \"react\";\r\nimport { damageTypes } from \"../reducers/index\";\r\nimport { addAttack } from \"../actions/attacks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { enumIntoArray } from \"../utils\";\r\n\r\nconst NewAttack = () => {\r\n  const damageTypesArray = enumIntoArray(damageTypes);\r\n  const dispatch = useDispatch();\r\n  const possibleSides: number[] = [4, 6, 8, 10, 12, 20, 100];\r\n  const [newAttackName, setNewAttackName] = useState<string>(\"\");\r\n  const [sides, setSides] = useState<number>(20);\r\n  const [amount, setAmount] = useState<number>(1);\r\n  const [damageType, setDamageType] = useState<string>(\"\");\r\n  const [newStat, setNewStat] = useState<string>(\"\");\r\n  const [damageMod, setDamageMod] = useState<boolean>(false);\r\n  return (\r\n    <div>\r\n      <br />\r\n      <input\r\n        type=\"text\"\r\n        defaultValue=\"attack name\"\r\n        name=\"name\"\r\n        onChange={e => setNewAttackName(e.currentTarget.value)}\r\n      />\r\n      &nbsp;\r\n      <select\r\n        name=\"stat\"\r\n        defaultValue=\"\"\r\n        onChange={e => setNewStat(e.currentTarget.value)}\r\n      >\r\n        <option value={\"\"} disabled>\r\n          choose one\r\n        </option>\r\n        <option value=\"STR\">STR</option>\r\n        <option value=\"DEX\">DEX</option>\r\n        <option value=\"CON\">CON</option>\r\n        <option value=\"INT\">INT</option>\r\n        <option value=\"WIS\">WIS</option>\r\n        <option value=\"CHA\">CHA</option>\r\n      </select>{\" \"}\r\n      &nbsp;\r\n      <select\r\n        name=\"amount\"\r\n        onChange={e => setAmount(parseInt(e.currentTarget.value))}\r\n      >\r\n        <option value=\"1\">1</option>\r\n        <option value=\"2\">2</option>\r\n      </select>\r\n      D\r\n      <select\r\n        name=\"sides\"\r\n        defaultValue=\"4\"\r\n        onChange={e => setSides(parseInt(e.currentTarget.value))}\r\n      >\r\n        {possibleSides\r\n          .filter(option => option < 13)\r\n          .map(die => (\r\n            <option value={die} key={die}>\r\n              {die}\r\n            </option>\r\n          ))}\r\n      </select>\r\n      &nbsp;\r\n      <select\r\n        defaultValue=\"\"\r\n        onChange={e => setDamageType(e.currentTarget.value)}\r\n      >\r\n        <option value={\"\"} disabled>\r\n          choose one\r\n        </option>\r\n        {damageTypesArray.map(damageOption => (\r\n          <option value={damageOption} key={damageOption}>\r\n            {damageOption}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      &nbsp; +MOD to dmg? &nbsp;\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"damageMod\"\r\n        onChange={() => setDamageMod(!damageMod)}\r\n      />\r\n      &nbsp;\r\n      <button\r\n        type=\"submit\"\r\n        onClick={() =>\r\n          newAttackName !== \"\" && newStat !== \"\" && damageType !== \"\"\r\n            ? dispatch(\r\n                addAttack(\r\n                  newAttackName,\r\n                  newStat,\r\n                  sides,\r\n                  amount,\r\n                  damageType,\r\n                  damageMod\r\n                )\r\n              )\r\n            : alert(\"Please fill out all fields before submitting.\")\r\n        }\r\n      >\r\n        add new attack\r\n      </button>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewAttack;\r\n","import { ADD_ATTACK, REMOVE_ATTACK } from \"../constants\";\r\n\r\nexport const addAttack = (\r\n  name: string,\r\n  stat: string,\r\n  damageDie: number,\r\n  dieAmount: number,\r\n  damageType: string,\r\n  damageMod: boolean\r\n) => ({\r\n  type: ADD_ATTACK,\r\n  payload: {\r\n    name,\r\n    stat,\r\n    damage: {\r\n      diceSides: damageDie,\r\n      diceAmount: dieAmount,\r\n      damageType,\r\n      damageMod\r\n    }\r\n  }\r\n});\r\n\r\nexport const removeAttack = (name: string) => ({\r\n  type: REMOVE_ATTACK,\r\n  payload: name\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { diceRoller } from \"../utils\";\r\n\r\ninterface Roll {\r\n  total: number;\r\n  rolls: number[];\r\n  critical?: boolean;\r\n}\r\nconst RollOne = () => {\r\n  const [sides, setSides] = useState<number>(20);\r\n  const [amount, setAmount] = useState<number>(1);\r\n  const [bonus, setBonus] = useState<number>(0);\r\n  const [result, setResult] = useState<Roll>({\r\n    total: 0,\r\n    rolls: [],\r\n    critical: false\r\n  });\r\n  const [advantage, setAdvantage] = useState<boolean>(false);\r\n  const [disadvantage, setDisadvantage] = useState<boolean>(false);\r\n  const possibleSides: number[] = [4, 6, 8, 10, 12, 20, 100];\r\n\r\n  const advantageHandler = (sides: number, amount: number, bonus: number) => {\r\n    if (advantage && !disadvantage) {\r\n      let firstRoll = diceRoller(sides, amount, bonus);\r\n      let secondRoll = diceRoller(sides, amount, bonus);\r\n\r\n      return firstRoll.total < secondRoll.total ? firstRoll : secondRoll;\r\n    } else if (disadvantage && !advantage) {\r\n      let firstRoll = diceRoller(sides, amount, bonus);\r\n      let secondRoll = diceRoller(sides, amount, bonus);\r\n\r\n      return firstRoll.total > secondRoll.total ? firstRoll : secondRoll;\r\n    } else return diceRoller(sides, amount, bonus);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>Misc. Rolls</h4>\r\n      How many sides do your dice have? &nbsp;\r\n      <select\r\n        name=\"sides\"\r\n        defaultValue={sides}\r\n        onChange={e => setSides(parseInt(e.currentTarget.value))}\r\n      >\r\n        {possibleSides.map(die => (\r\n          <option value={die} key={die}>\r\n            {die}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      {sides === 20 && (\r\n        <div>\r\n          Are we rolling with advantage &nbsp;\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"advantage\"\r\n            onChange={() => setDisadvantage(!disadvantage)}\r\n          />{\" \"}\r\n          disadvantage &nbsp;\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"disadvantage\"\r\n            onChange={() => setAdvantage(!advantage)}\r\n          />\r\n          ?\r\n        </div>\r\n      )}\r\n      How many are we rolling? &nbsp;\r\n      <input\r\n        type=\"number\"\r\n        style={{ width: \"7em\", textAlign: \"center\" }}\r\n        value={amount}\r\n        onChange={e => setAmount(e.currentTarget.valueAsNumber)}\r\n      />\r\n      <br />\r\n      Are there any bonuses to the roll? &nbsp;\r\n      <input\r\n        type=\"number\"\r\n        style={{ width: \"7em\", textAlign: \"center\" }}\r\n        value={bonus}\r\n        onChange={e => setBonus(e.currentTarget.valueAsNumber)}\r\n      />\r\n      <br />\r\n      <br />\r\n      <button onClick={() => setResult(advantageHandler(sides, amount, bonus))}>\r\n        Let's roll!\r\n      </button>\r\n      &nbsp; {result.total > 0 && `${result.total}! `}\r\n      {result.critical && \"Critical hit! \"}\r\n      {result.rolls.length > 1 && `Individual rolls: ${result.rolls}`}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RollOne;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { diceRoller, calculateMod } from \"../utils\";\r\nimport { removeAttack } from \"../actions/attacks\";\r\nimport NewAttack from \"./NewAttack\";\r\nimport RollOne from \"./RollOne\";\r\n\r\nconst Attacks = () => {\r\n  const stats: any = useSelector<any>(state => state.stats);\r\n  const level: any = useSelector<any>(state => state.level);\r\n  const characterClass: any = useSelector<any>(state => state.class);\r\n  const characterRace: any = useSelector<any>(state => state.race);\r\n  const profBonus: any = useSelector<any>(state => state.profBonus);\r\n  const attacks: any = useSelector<any>(state => state.attacks);\r\n  const dispatch = useDispatch();\r\n\r\n  interface Roll {\r\n    total: number;\r\n    rolls: number[];\r\n    critical?: boolean;\r\n  }\r\n  const [result, setResult] = useState<Roll>({\r\n    total: 0,\r\n    rolls: [],\r\n    critical: false\r\n  });\r\n  const critCalculator = () => {\r\n    let extraDie = 0;\r\n    if (characterClass === \"Barbarian\") {\r\n      if (level >= 9) extraDie++;\r\n      if (level >= 13) extraDie++;\r\n      if (level >= 17) extraDie++;\r\n    }\r\n    if (characterRace === \"Half-Orc\") extraDie++;\r\n    return extraDie;\r\n  };\r\n  const crit: any = critCalculator();\r\n\r\n  return (\r\n    <div\r\n      style={{ marginLeft: \"1em\", display: \"flex\", flexDirection: \"column\" }}\r\n    >\r\n      <h4>Attacks</h4>\r\n      <div\r\n        style={{\r\n          maxHeight: \"5em\",\r\n          overflowY: \"scroll\"\r\n        }}\r\n      >\r\n        {attacks.map((attack: { name: any; damage: any; stat: string }) => (\r\n          <div key={attack.name} style={{ padding: \"3px\" }}>\r\n            {attack.name} ({attack.stat}) ~ Damage: {attack.damage.diceAmount}D\r\n            {attack.damage.diceSides} &nbsp;\r\n            {attack.damage.damageType !== 7\r\n              ? attack.damage.damageType\r\n              : \"Piercing\"}\r\n            &nbsp;\r\n            <button\r\n              onClick={() =>\r\n                setResult(\r\n                  diceRoller(\r\n                    20,\r\n                    1,\r\n                    calculateMod(stats[attack.stat]) + profBonus\r\n                  )\r\n                )\r\n              }\r\n            >\r\n              attack\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() =>\r\n                setResult(\r\n                  diceRoller(\r\n                    attack.damage.diceSides,\r\n                    result.critical\r\n                      ? attack.damage.diceAmount * 2 + crit\r\n                      : attack.damage.diceAmount,\r\n                    attack.damage.damageMod && calculateMod(stats[attack.stat])\r\n                  )\r\n                )\r\n              }\r\n            >\r\n              damage\r\n            </button>\r\n            &nbsp;\r\n            <button onClick={() => dispatch(removeAttack(attack.name))}>\r\n              X\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <NewAttack />\r\n      <br />\r\n      <div style={{ maxHeight: \"2em\" }}>\r\n        {result.total > 0 && `Total: ${result.total}!`}\r\n        {result.critical && \" Critical hit!\"}\r\n        {result.rolls.length > 1 &&\r\n          ` Individual rolls: ${result.rolls.join(\", \")}`}\r\n      </div>\r\n      <br />\r\n      <RollOne />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Attacks;\r\n","import React from \"react\";\nimport { MainGrid } from \"./components/styles/MainGrid\";\nimport Stats from \"./components/Stats\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"../src/store\";\nimport CharacterDetail from \"../src/components/CharacterDetail\";\nimport Attacks from \"./components/Attacks\";\n\nconst App = () => {\n  return (\n    <Provider store={configureStore()}>\n      <MainGrid>\n        <div\n          style={{\n            gridArea: \"stats\",\n            display: \"flex\",\n            flexFlow: \"row wrap\",\n            justifyContent: \"space-around\",\n            alignItems: \"center\"\n          }}\n        >\n          <Stats />\n        </div>\n        <div style={{ gridArea: \"details\" }}>\n          <CharacterDetail />\n        </div>\n        <div\n          style={{\n            gridArea: \"attacks\",\n            maxHeight: \"100%\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginTop: \"3em\"\n          }}\n        >\n          <Attacks />\n        </div>\n      </MainGrid>\n    </Provider>\n  );\n};\n\nexport default App;\n","import { Store, createStore } from \"redux\";\r\nimport { rootReducer, RootState } from \"./reducers/index\";\r\n\r\nexport function configureStore(initialState?: RootState): Store<RootState> {\r\n  const store = createStore(\r\n    rootReducer as any,\r\n    initialState as any,\r\n\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n      (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n  ) as Store<RootState>;\r\n\r\n  return store;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}