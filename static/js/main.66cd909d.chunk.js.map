{"version":3,"sources":["components/styles/MainGrid.ts","components/styles/StatCard.ts","reducers/index.ts","components/SingleStat.tsx","actions/stats.ts","constants.ts","components/Stats.tsx","actions/persist.ts","utils.ts","components/CharacterDetail.tsx","actions/details.ts","components/NewAttack.tsx","actions/attacks.ts","components/RollOne.tsx","components/Attacks.tsx","App.tsx","store.ts","serviceWorker.ts","index.tsx"],"names":["MainGrid","styled","div","classes","damageTypes","StatCard","H5","h5","SingleStat","props","prof","useSelector","state","saves","statValue","stats","stat","dispatch","useDispatch","type","checked","includes","onChange","payload","name","toUpperCase","Math","floor","style","width","textAlign","boxSizing","value","e","currentTarget","valueAsNumber","Stats","store","useEffect","localStorage","JSON","parse","stringStore","stringify","setItem","console","log","initialState","STR","DEX","CON","INT","WIS","CHA","race","class","background","level","profBonus","AC","HP","max","current","attacks","damage","diceSides","diceAmount","damageType","Piercing","damageMod","rootReducer","action","ceil","filter","save","attack","diceRoller","sides","amount","bonus","roll","total","rolls","critical","newRoll","random","push","enumIntoArray","enumObject","all","key","slice","length","CharacterDetail","hp","characterClass","classesArray","DC","calculateSpellDC","spellBonus","margin","display","flexDirection","alignContent","height","changeName","changeBackground","changeRace","changeClass","target","disabled","map","classOption","changeLevel","NewAttack","damageTypesArray","useState","newAttackName","setNewAttackName","setSides","setAmount","setDamageType","newStat","setNewStat","setDamageMod","defaultValue","parseInt","option","die","damageOption","onClick","damageDie","dieAmount","addAttack","alert","RollOne","setBonus","result","setResult","advantage","setAdvantage","disadvantage","setDisadvantage","firstRoll","secondRoll","advantageHandler","Attacks","characterRace","crit","extraDie","critCalculator","marginLeft","maxHeight","overflowY","padding","join","App","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","gridArea","flexFlow","justifyContent","alignItems","marginTop","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.66cd909d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const MainGrid = styled.div`\r\n  display: grid;\r\n  margin: 0px;\r\n  height: 100vh;\r\n  max-height: 100vh;\r\n  width: 100vw;\r\n  grid-template-rows: 25% minmax(0, 1fr);\r\n  grid-template-columns: 20% minmax(0, 1fr);\r\n  grid-template-areas:\r\n    \"stats details\"\r\n    \"stats attacks\";\r\n  box-sizing: border-box;\r\n\r\n  @media (max-width: 640px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 auto;\r\n    align-items: space-between;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StatCard = styled.div`\r\n  height: 10%;\r\n  width: 85%;\r\n  border-radius: 25px;\r\n  background-color: white;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  padding: 2%;\r\n  margin: 0.1em;\r\n  border: 2px solid black;\r\n`;\r\n\r\nexport const H5 = styled.h5`\r\n  margin: 0 auto;\r\n`;\r\n","import {\r\n  CHANGE_MOD,\r\n  CHANGE_NAME,\r\n  CHANGE_LEVEL,\r\n  CHANGE_CLASS,\r\n  ADD_ATTACK,\r\n  ADD_SAVE,\r\n  REMOVE_ATTACK,\r\n  REMOVE_SAVE,\r\n  CHANGE_BACKGROUND,\r\n  CHANGE_AC,\r\n  CHANGE_RACE,\r\n  PERSIST_STORE,\r\n  CHANGE_HP_MAX,\r\n  CHANGE_HP_CURRENT\r\n} from \"../constants\";\r\n\r\nexport enum classes {\r\n  Artificer,\r\n  Barbarian,\r\n  Bard,\r\n  Cleric,\r\n  Druid,\r\n  Fighter,\r\n  Monk,\r\n  Paladin,\r\n  Ranger,\r\n  Rogue,\r\n  Sorcerer,\r\n  Warlock,\r\n  Wizard\r\n}\r\n\r\nexport enum damageTypes {\r\n  Acid,\r\n  Bludgeoning,\r\n  Cold,\r\n  Fire,\r\n  Force,\r\n  Lightning,\r\n  Necrotic,\r\n  Piercing,\r\n  Poison,\r\n  Psychic,\r\n  Radiant,\r\n  Slashing,\r\n  Thunder\r\n}\r\n\r\nexport interface RootState {\r\n  stats: {\r\n    STR: number;\r\n    DEX: number;\r\n    CON: number;\r\n    INT: number;\r\n    WIS: number;\r\n    CHA: number;\r\n  };\r\n  name: string;\r\n  race: string;\r\n  class: classes | \"\";\r\n  background: string;\r\n  level: number;\r\n  profBonus: number;\r\n  AC: number;\r\n  HP: {\r\n    max: number;\r\n    current: number;\r\n  };\r\n  saves: string[];\r\n  attacks: [\r\n    {\r\n      name: string;\r\n      stat: string;\r\n      damage: {\r\n        diceSides: number;\r\n        diceAmount: number;\r\n        damageType: damageTypes;\r\n        damageMod: boolean;\r\n      };\r\n    }\r\n  ];\r\n}\r\n\r\nexport const initialState: RootState = {\r\n  stats: {\r\n    STR: 10,\r\n    DEX: 10,\r\n    CON: 10,\r\n    INT: 10,\r\n    WIS: 10,\r\n    CHA: 10\r\n  },\r\n  name: \"\",\r\n  race: \"\",\r\n  class: \"\",\r\n  background: \"\",\r\n  level: 1,\r\n  profBonus: 2,\r\n  AC: 10,\r\n  HP: {\r\n    max: 1,\r\n    current: 1\r\n  },\r\n  saves: [],\r\n  attacks: [\r\n    {\r\n      name: \"Dagger\",\r\n      stat: \"DEX\",\r\n      damage: {\r\n        diceSides: 4,\r\n        diceAmount: 1,\r\n        damageType: damageTypes.Piercing,\r\n        damageMod: true\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\nexport function rootReducer(\r\n  state = initialState,\r\n  action: { type: string; payload: any }\r\n) {\r\n  switch (action.type) {\r\n    case CHANGE_MOD: {\r\n      switch (action.payload.stat) {\r\n        case \"STR\": {\r\n          return {\r\n            ...state,\r\n            stats: { ...state.stats, STR: action.payload.value }\r\n          };\r\n        }\r\n        case \"DEX\": {\r\n          return {\r\n            ...state,\r\n            stats: { ...state.stats, DEX: action.payload.value }\r\n          };\r\n        }\r\n        case \"CON\": {\r\n          return {\r\n            ...state,\r\n            stats: { ...state.stats, CON: action.payload.value }\r\n          };\r\n        }\r\n        case \"INT\": {\r\n          return {\r\n            ...state,\r\n            stats: { ...state.stats, INT: action.payload.value }\r\n          };\r\n        }\r\n        case \"WIS\": {\r\n          return {\r\n            ...state,\r\n            stats: { ...state.stats, WIS: action.payload.value }\r\n          };\r\n        }\r\n        case \"CHA\": {\r\n          return {\r\n            ...state,\r\n            stats: { ...state.stats, CHA: action.payload.value }\r\n          };\r\n        }\r\n      }\r\n    }\r\n    case CHANGE_NAME: {\r\n      return { ...state, name: action.payload };\r\n    }\r\n    case CHANGE_RACE: {\r\n      return { ...state, race: action.payload };\r\n    }\r\n    case CHANGE_LEVEL: {\r\n      return {\r\n        ...state,\r\n        level: action.payload,\r\n        profBonus: 1 + Math.ceil(action.payload / 4)\r\n      };\r\n    }\r\n    case CHANGE_CLASS: {\r\n      return { ...state, class: action.payload };\r\n    }\r\n    case CHANGE_AC: {\r\n      return { ...state, AC: action.payload };\r\n    }\r\n    case ADD_SAVE: {\r\n      return { ...state, saves: [...state.saves, action.payload] };\r\n    }\r\n    case REMOVE_SAVE: {\r\n      return {\r\n        ...state,\r\n        saves: state.saves.filter(save => save !== action.payload)\r\n      };\r\n    }\r\n    case CHANGE_BACKGROUND: {\r\n      return { ...state, background: action.payload };\r\n    }\r\n    case CHANGE_HP_MAX: {\r\n      return { ...state, HP: { ...state.HP, max: action.payload } };\r\n    }\r\n    case CHANGE_HP_CURRENT: {\r\n      return { ...state, HP: { ...state.HP, current: action.payload } };\r\n    }\r\n    case ADD_ATTACK: {\r\n      return { ...state, attacks: [...state.attacks, action.payload] };\r\n    }\r\n    case REMOVE_ATTACK: {\r\n      return {\r\n        ...state,\r\n        attacks: state.attacks.filter(attack => attack.name !== action.payload)\r\n      };\r\n    }\r\n    case PERSIST_STORE: {\r\n      return { ...action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { StatCard, H5 } from \"../components/styles/StatCard\";\r\nimport { createStatChange, addSave, removeSave } from \"../actions/stats\";\r\n\r\nconst SingleStat = (props: { name: string; stat: string }) => {\r\n  const prof: any = useSelector<any>(state => state.saves);\r\n  const statValue: any = useSelector<any>(state => state.stats[props.stat]);\r\n  const dispatch = useDispatch();\r\n\r\n  const addOrRemoveSave = () => {\r\n    return prof.includes(props.stat)\r\n      ? removeSave(props.stat)\r\n      : addSave(props.stat);\r\n  };\r\n\r\n  return (\r\n    <StatCard>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={prof.includes(props.stat)}\r\n        onChange={() => dispatch(addOrRemoveSave())}\r\n      />\r\n      <H5>{props.name.toUpperCase()}</H5>\r\n      <span>\r\n        {props.stat}: {Math.floor((statValue - 10) / 2)}\r\n      </span>\r\n\r\n      <input\r\n        type=\"number\"\r\n        style={{\r\n          width: \"75%\",\r\n          textAlign: \"center\",\r\n          boxSizing: \"border-box\"\r\n        }}\r\n        value={statValue}\r\n        onChange={e =>\r\n          dispatch(createStatChange(props.stat, e.currentTarget.valueAsNumber))\r\n        }\r\n      />\r\n    </StatCard>\r\n  );\r\n};\r\n\r\nexport default SingleStat;\r\n","import { CHANGE_MOD, ADD_SAVE, REMOVE_SAVE } from \"../constants\";\r\n\r\nexport const createStatChange = (stat: string, value: number) => ({\r\n  type: CHANGE_MOD,\r\n  payload: {\r\n    stat,\r\n    value\r\n  }\r\n});\r\n\r\nexport const addSave = (stat: string) => ({\r\n  type: ADD_SAVE,\r\n  payload: stat\r\n});\r\n\r\nexport const removeSave = (stat: string) => ({\r\n  type: REMOVE_SAVE,\r\n  payload: stat\r\n});\r\n","export const CHANGE_MOD = \"CHANGE_MOD\";\r\nexport const CHANGE_NAME = \"CHANGE_NAME\";\r\nexport const CHANGE_LEVEL = \"CHANGE_LEVEL\";\r\nexport const CHANGE_CLASS = \"CHANGE_CLASS\";\r\nexport const ADD_SAVE = \"ADD_SAVE\";\r\nexport const REMOVE_SAVE = \"REMOVE_SAVE\";\r\nexport const CHANGE_BACKGROUND = \"CHANGE_BACKGROUND\";\r\nexport const CHANGE_AC = \"CHANGE_AC\";\r\nexport const CHANGE_RACE = \"CHANGE_RACE\";\r\nexport const ADD_ATTACK = \"ADD_ATTACK\";\r\nexport const REMOVE_ATTACK = \"REMOVE_ATTACK\";\r\nexport const PERSIST_STORE = \"PERSIST_STORE\";\r\nexport const CHANGE_HP_MAX = \"CHANGE_HP_MAX\";\r\nexport const CHANGE_HP_CURRENT = \"CHANGE_HP_CURRENT\";\r\n","import React, { useEffect } from \"react\";\r\nimport SingleStat from \"../components/SingleStat\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { persistStore } from \"../actions/persist\";\r\n\r\nconst Stats = () => {\r\n  const dispatch = useDispatch();\r\n  const store: any = useSelector<any>(state => state);\r\n\r\n  useEffect(() => {\r\n    localStorage.store &&\r\n      dispatch(persistStore(JSON.parse(localStorage.store)));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (store) {\r\n      try {\r\n        const stringStore = JSON.stringify(store);\r\n        localStorage.setItem(\"store\", stringStore);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [store]);\r\n\r\n  return (\r\n    <>\r\n      <SingleStat name=\"Strength\" stat=\"STR\"></SingleStat>\r\n      <SingleStat name=\"Dexterity\" stat=\"DEX\"></SingleStat>\r\n      <SingleStat name=\"Constitution\" stat=\"CON\"></SingleStat>\r\n      <SingleStat name=\"Intelligence\" stat=\"INT\"></SingleStat>\r\n      <SingleStat name=\"Wisdom\" stat=\"WIS\"></SingleStat>\r\n      <SingleStat name=\"Charisma\" stat=\"CHA\"></SingleStat>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import { PERSIST_STORE } from \"../constants\";\r\n\r\nexport const persistStore = (state: any) => ({\r\n  type: PERSIST_STORE,\r\n  payload: state\r\n});\r\n","export function diceRoller(sides = 20, amount = 1, bonus = 0) {\r\n  interface Roll {\r\n    total: number;\r\n    rolls: number[];\r\n    critical?: boolean;\r\n  }\r\n\r\n  let roll: Roll = {\r\n    total: bonus,\r\n    rolls: [],\r\n    critical: false\r\n  };\r\n\r\n  while (amount) {\r\n    let newRoll: number = Math.ceil(Math.random() * sides);\r\n    roll.rolls.push(newRoll);\r\n    roll.total += newRoll;\r\n    roll.critical = sides === 20 && newRoll === 20;\r\n    amount--;\r\n  }\r\n  console.log(roll);\r\n  return roll;\r\n}\r\n\r\nexport function enumIntoArray(enumObject: any) {\r\n  var all = [];\r\n  for (var key in enumObject) {\r\n    all.push(enumObject[key]);\r\n  }\r\n  return all.slice(0, all.length / 2);\r\n}\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  changeName,\r\n  changeBackground,\r\n  changeClass,\r\n  changeLevel,\r\n  changeAC,\r\n  changeRace,\r\n  changeHPMax,\r\n  changeHPCurrent\r\n} from \"../actions/details\";\r\nimport { classes } from \"../reducers/index\";\r\nimport { enumIntoArray } from \"../utils\";\r\n\r\nconst CharacterDetail = () => {\r\n  const stats: any = useSelector<any>(state => state.stats);\r\n  const hp: any = useSelector<any>(state => state.HP);\r\n  const name: any = useSelector<any>(state => state.name);\r\n  const background: any = useSelector<any>(state => state.background);\r\n  const race: any = useSelector<any>(state => state.race);\r\n  const characterClass: any = useSelector<any>(state => state.class);\r\n  let classesArray: string[] = enumIntoArray(classes);\r\n  const level: any = useSelector<any>(state => state.level);\r\n  const profBonus: any = useSelector<any>(state => state.profBonus);\r\n  const AC: any = useSelector<any>(state => state.AC);\r\n  const dispatch = useDispatch();\r\n\r\n  const calculateSpellDC = () => {\r\n    switch (characterClass) {\r\n      case \"Artificer\":\r\n      case \"Wizard\": {\r\n        return 8 + Math.floor((stats.INT - 10) / 2) + profBonus;\r\n      }\r\n      case \"Bard\":\r\n      case \"Paladin\":\r\n      case \"Sorcerer\":\r\n      case \"Warlock\": {\r\n        return 8 + Math.floor((stats.CHA - 10) / 2) + profBonus;\r\n      }\r\n      case \"Cleric\":\r\n      case \"Druid\":\r\n      case \"Ranger\": {\r\n        return 8 + Math.floor((stats.WIS - 10) / 2) + profBonus;\r\n      }\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const DC = calculateSpellDC();\r\n  const spellBonus = DC - 8;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"1em\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignContent: \"space-between\",\r\n        height: \"150px\"\r\n      }}\r\n    >\r\n      <h2>Character Details </h2>\r\n      <div>\r\n        Name: &nbsp;\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={e => dispatch(changeName(e.currentTarget.value))}\r\n        />\r\n        &nbsp; Background: &nbsp;\r\n        <input\r\n          type=\"text\"\r\n          value={background}\r\n          onChange={e => dispatch(changeBackground(e.currentTarget.value))}\r\n        />\r\n        &nbsp; Race: &nbsp;\r\n        <input\r\n          type=\"text\"\r\n          value={race}\r\n          onChange={e => dispatch(changeRace(e.currentTarget.value))}\r\n        />\r\n        &nbsp; Class: &nbsp;\r\n        <select\r\n          value={characterClass}\r\n          onChange={e => dispatch(changeClass(e.target.value))}\r\n        >\r\n          <option value={\"\"} disabled>\r\n            choose one\r\n          </option>\r\n          {classesArray.map(classOption => (\r\n            <option value={classOption} key={classOption}>\r\n              {classOption}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        Level: &nbsp;\r\n        <input\r\n          type=\"number\"\r\n          value={level}\r\n          onChange={e => {\r\n            dispatch(changeLevel(e.currentTarget.valueAsNumber));\r\n          }}\r\n        />\r\n        &nbsp; Prof. Bonus: {profBonus}\r\n        &nbsp; HP(max):\r\n        <input\r\n          type=\"number\"\r\n          value={hp.max}\r\n          onChange={e => dispatch(changeHPMax(e.currentTarget.valueAsNumber))}\r\n        />\r\n        &nbsp; HP(current): &nbsp;\r\n        <input\r\n          type=\"number\"\r\n          value={hp.current}\r\n          onChange={e =>\r\n            dispatch(changeHPCurrent(e.currentTarget.valueAsNumber))\r\n          }\r\n        />\r\n        &nbsp; AC: &nbsp;\r\n        <input\r\n          type=\"number\"\r\n          value={AC}\r\n          onChange={e => dispatch(changeAC(e.currentTarget.valueAsNumber))}\r\n        />\r\n      </div>\r\n      <div>\r\n        {DC !== null &&\r\n          `Spell Save DC: ${DC} Spell Attack Bonus: ${spellBonus}`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import {\r\n  CHANGE_NAME,\r\n  CHANGE_BACKGROUND,\r\n  CHANGE_CLASS,\r\n  CHANGE_LEVEL,\r\n  CHANGE_AC,\r\n  CHANGE_HP_MAX,\r\n  CHANGE_HP_CURRENT,\r\n  CHANGE_RACE\r\n} from \"../constants\";\r\n\r\nexport const changeName = (name: string) => ({\r\n  type: CHANGE_NAME,\r\n  payload: name\r\n});\r\nexport const changeRace = (race: string) => ({\r\n  type: CHANGE_RACE,\r\n  payload: race\r\n});\r\nexport const changeBackground = (background: string) => ({\r\n  type: CHANGE_BACKGROUND,\r\n  payload: background\r\n});\r\nexport const changeClass = (characterClass: string) => ({\r\n  type: CHANGE_CLASS,\r\n  payload: characterClass\r\n});\r\nexport const changeLevel = (level: number) => ({\r\n  type: CHANGE_LEVEL,\r\n  payload: level\r\n});\r\nexport const changeAC = (ac: number) => ({\r\n  type: CHANGE_AC,\r\n  payload: ac\r\n});\r\nexport const changeHPMax = (newMax: number) => ({\r\n  type: CHANGE_HP_MAX,\r\n  payload: newMax\r\n});\r\nexport const changeHPCurrent = (newCurrent: number) => ({\r\n  type: CHANGE_HP_CURRENT,\r\n  payload: newCurrent\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { damageTypes } from \"../reducers/index\";\r\nimport { addAttack } from \"../actions/attacks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { enumIntoArray } from \"../utils\";\r\n\r\nconst NewAttack = () => {\r\n  const damageTypesArray = enumIntoArray(damageTypes);\r\n  const dispatch = useDispatch();\r\n  const possibleSides: number[] = [4, 6, 8, 10, 12, 20, 100];\r\n  const [newAttackName, setNewAttackName] = useState<string>(\"\");\r\n  const [sides, setSides] = useState<number>(20);\r\n  const [amount, setAmount] = useState<number>(1);\r\n  const [damageType, setDamageType] = useState<string>(\"\");\r\n  const [newStat, setNewStat] = useState<string>(\"\");\r\n  const [damageMod, setDamageMod] = useState<boolean>(false);\r\n  return (\r\n    <div>\r\n      <br />\r\n      <input\r\n        type=\"text\"\r\n        defaultValue=\"attack name\"\r\n        name=\"name\"\r\n        onChange={e => setNewAttackName(e.currentTarget.value)}\r\n      />\r\n      &nbsp;\r\n      <select\r\n        name=\"stat\"\r\n        defaultValue=\"\"\r\n        onChange={e => setNewStat(e.currentTarget.value)}\r\n      >\r\n        <option value={\"\"} disabled>\r\n          choose one\r\n        </option>\r\n        <option value=\"STR\">STR</option>\r\n        <option value=\"DEX\">DEX</option>\r\n        <option value=\"CON\">CON</option>\r\n        <option value=\"INT\">INT</option>\r\n        <option value=\"WIS\">WIS</option>\r\n        <option value=\"CHA\">CHA</option>\r\n      </select>{\" \"}\r\n      &nbsp;\r\n      <select\r\n        name=\"amount\"\r\n        onChange={e => setAmount(parseInt(e.currentTarget.value))}\r\n      >\r\n        <option value=\"1\">1</option>\r\n        <option value=\"2\">2</option>\r\n      </select>\r\n      D\r\n      <select\r\n        name=\"sides\"\r\n        defaultValue=\"4\"\r\n        onChange={e => setSides(parseInt(e.currentTarget.value))}\r\n      >\r\n        {possibleSides\r\n          .filter(option => option < 13)\r\n          .map(die => (\r\n            <option value={die} key={die}>\r\n              {die}\r\n            </option>\r\n          ))}\r\n      </select>\r\n      &nbsp;\r\n      <select\r\n        defaultValue=\"\"\r\n        onChange={e => setDamageType(e.currentTarget.value)}\r\n      >\r\n        <option value={\"\"} disabled>\r\n          choose one\r\n        </option>\r\n        {damageTypesArray.map(damageOption => (\r\n          <option value={damageOption} key={damageOption}>\r\n            {damageOption}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      &nbsp; +MOD to dmg? &nbsp;\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"damageMod\"\r\n        onChange={() => setDamageMod(!damageMod)}\r\n      />\r\n      &nbsp;\r\n      <button\r\n        type=\"submit\"\r\n        onClick={() =>\r\n          newAttackName !== \"\" && newStat !== \"\" && damageType !== \"\"\r\n            ? dispatch(\r\n                addAttack(\r\n                  newAttackName,\r\n                  newStat,\r\n                  sides,\r\n                  amount,\r\n                  damageType,\r\n                  damageMod\r\n                )\r\n              )\r\n            : alert(\"Please fill out all fields before submitting.\")\r\n        }\r\n      >\r\n        add new attack\r\n      </button>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewAttack;\r\n","import { ADD_ATTACK, REMOVE_ATTACK } from \"../constants\";\r\n\r\nexport const addAttack = (\r\n  name: string,\r\n  stat: string,\r\n  damageDie: number,\r\n  dieAmount: number,\r\n  damageType: string,\r\n  damageMod: boolean\r\n) => ({\r\n  type: ADD_ATTACK,\r\n  payload: {\r\n    name,\r\n    stat,\r\n    damage: {\r\n      diceSides: damageDie,\r\n      diceAmount: dieAmount,\r\n      damageType,\r\n      damageMod\r\n    }\r\n  }\r\n});\r\n\r\nexport const removeAttack = (name: string) => ({\r\n  type: REMOVE_ATTACK,\r\n  payload: name\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { diceRoller } from \"../utils\";\r\n\r\ninterface Roll {\r\n  total: number;\r\n  rolls: number[];\r\n  critical?: boolean;\r\n}\r\nconst RollOne = () => {\r\n  const [sides, setSides] = useState<number>(20);\r\n  const [amount, setAmount] = useState<number>(1);\r\n  const [bonus, setBonus] = useState<number>(0);\r\n  const [result, setResult] = useState<Roll>({\r\n    total: 0,\r\n    rolls: [],\r\n    critical: false\r\n  });\r\n  const [advantage, setAdvantage] = useState<boolean>(false);\r\n  const [disadvantage, setDisadvantage] = useState<boolean>(false);\r\n  const possibleSides: number[] = [4, 6, 8, 10, 12, 20, 100];\r\n\r\n  const advantageHandler = (sides: number, amount: number, bonus: number) => {\r\n    if (advantage && !disadvantage) {\r\n      let firstRoll = diceRoller(sides, amount, bonus);\r\n      let secondRoll = diceRoller(sides, amount, bonus);\r\n\r\n      return firstRoll.total < secondRoll.total ? firstRoll : secondRoll;\r\n    } else if (disadvantage && !advantage) {\r\n      let firstRoll = diceRoller(sides, amount, bonus);\r\n      let secondRoll = diceRoller(sides, amount, bonus);\r\n\r\n      return firstRoll.total > secondRoll.total ? firstRoll : secondRoll;\r\n    } else return diceRoller(sides, amount, bonus);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>Misc. Rolls</h4>\r\n      How many sides do your dice have? &nbsp;\r\n      <select\r\n        name=\"sides\"\r\n        defaultValue={sides}\r\n        onChange={e => setSides(parseInt(e.currentTarget.value))}\r\n      >\r\n        {possibleSides.map(die => (\r\n          <option value={die} key={die}>\r\n            {die}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      {sides === 20 && (\r\n        <div>\r\n          Are we rolling with advantage &nbsp;\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"advantage\"\r\n            onChange={() => setDisadvantage(!disadvantage)}\r\n          />{\" \"}\r\n          disadvantage &nbsp;\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"disadvantage\"\r\n            onChange={() => setAdvantage(!advantage)}\r\n          />\r\n          ?\r\n        </div>\r\n      )}\r\n      How many are we rolling? &nbsp;\r\n      <input\r\n        type=\"number\"\r\n        value={amount}\r\n        onChange={e => setAmount(e.currentTarget.valueAsNumber)}\r\n      />\r\n      <br />\r\n      Are there any bonuses to the roll? &nbsp;\r\n      <input\r\n        type=\"number\"\r\n        value={bonus}\r\n        onChange={e => setBonus(e.currentTarget.valueAsNumber)}\r\n      />\r\n      <br />\r\n      <br />\r\n      <button onClick={() => setResult(advantageHandler(sides, amount, bonus))}>\r\n        Let's roll!\r\n      </button>\r\n      &nbsp; {result.total > 0 && `${result.total}! `}\r\n      {result.critical && \"Critical hit! \"}\r\n      {result.rolls.length > 1 && `Individual rolls: ${result.rolls}`}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RollOne;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { diceRoller } from \"../utils\";\r\nimport { removeAttack } from \"../actions/attacks\";\r\nimport NewAttack from \"./NewAttack\";\r\nimport RollOne from \"./RollOne\";\r\n\r\nconst Attacks = () => {\r\n  const stats: any = useSelector<any>(state => state.stats);\r\n  const level: any = useSelector<any>(state => state.level);\r\n  const characterClass: any = useSelector<any>(state => state.class);\r\n  const characterRace: any = useSelector<any>(state => state.race);\r\n  const profBonus: any = useSelector<any>(state => state.profBonus);\r\n  const attacks: any = useSelector<any>(state => state.attacks);\r\n  const dispatch = useDispatch();\r\n\r\n  interface Roll {\r\n    total: number;\r\n    rolls: number[];\r\n    critical?: boolean;\r\n  }\r\n  const [result, setResult] = useState<Roll>({\r\n    total: 0,\r\n    rolls: [],\r\n    critical: false\r\n  });\r\n  const critCalculator = () => {\r\n    let extraDie = 0;\r\n    if (characterClass === \"Barbarian\") {\r\n      if (level >= 9) extraDie++;\r\n      if (level >= 13) extraDie++;\r\n      if (level >= 17) extraDie++;\r\n    }\r\n    if (characterRace === \"Half-Orc\") extraDie++;\r\n    return extraDie;\r\n  };\r\n  const crit: any = critCalculator();\r\n\r\n  return (\r\n    <div\r\n      style={{ marginLeft: \"1em\", display: \"flex\", flexDirection: \"column\" }}\r\n    >\r\n      <h4>Attacks</h4>\r\n      <div\r\n        style={{\r\n          maxHeight: \"5em\",\r\n          overflowY: \"scroll\"\r\n        }}\r\n      >\r\n        {attacks.map((attack: { name: any; damage: any; stat: string }) => (\r\n          <div key={attack.name} style={{ padding: \"3px\" }}>\r\n            {attack.name} ({attack.stat}) ~ Damage: {attack.damage.diceAmount}D\r\n            {attack.damage.diceSides} &nbsp;\r\n            {attack.damage.damageType !== 7\r\n              ? attack.damage.damageType\r\n              : \"Piercing\"}\r\n            &nbsp;\r\n            <button\r\n              onClick={() =>\r\n                setResult(\r\n                  diceRoller(\r\n                    20,\r\n                    1,\r\n                    Math.floor((stats[attack.stat] - 10) / 2) + profBonus\r\n                  )\r\n                )\r\n              }\r\n            >\r\n              attack\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() =>\r\n                setResult(\r\n                  diceRoller(\r\n                    attack.damage.diceSides,\r\n                    result.critical\r\n                      ? attack.damage.diceAmount * 2 + crit\r\n                      : attack.damage.diceAmount,\r\n                    attack.damage.damageMod &&\r\n                      Math.floor((stats[attack.stat] - 10) / 2)\r\n                  )\r\n                )\r\n              }\r\n            >\r\n              damage\r\n            </button>\r\n            &nbsp;\r\n            <button onClick={() => dispatch(removeAttack(attack.name))}>\r\n              X\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <NewAttack />\r\n      <br />\r\n      <div style={{ maxHeight: \"2em\" }}>\r\n        &nbsp; {result.total > 0 && `Total: ${result.total}! `}\r\n        {result.critical && \"Critical hit! \"}\r\n        {result.rolls.length > 1 &&\r\n          `Individual rolls: ${result.rolls.join(\", \")}`}\r\n      </div>\r\n      <br />\r\n      <RollOne />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Attacks;\r\n","import React from \"react\";\nimport { MainGrid } from \"./components/styles/MainGrid\";\nimport Stats from \"./components/Stats\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"../src/store\";\nimport CharacterDetail from \"../src/components/CharacterDetail\";\nimport Attacks from \"./components/Attacks\";\n\nconst App = () => {\n  return (\n    <Provider store={configureStore()}>\n      <MainGrid>\n        <div\n          style={{\n            gridArea: \"stats\",\n            display: \"flex\",\n            flexFlow: \"row wrap\",\n            justifyContent: \"space-around\",\n            alignItems: \"center\"\n          }}\n        >\n          <Stats />\n        </div>\n        <div style={{ gridArea: \"details\" }}>\n          <CharacterDetail />\n        </div>\n        <div\n          style={{\n            gridArea: \"attacks\",\n            maxHeight: \"100%\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginTop: \"3em\"\n          }}\n        >\n          <Attacks />\n        </div>\n      </MainGrid>\n    </Provider>\n  );\n};\n\nexport default App;\n","import { Store, createStore } from \"redux\";\r\nimport { rootReducer, RootState } from \"./reducers/index\";\r\n\r\nexport function configureStore(initialState?: RootState): Store<RootState> {\r\n  const store = createStore(\r\n    rootReducer as any,\r\n    initialState as any,\r\n\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n      (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n  ) as Store<RootState>;\r\n\r\n  return store;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}